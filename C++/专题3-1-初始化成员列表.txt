

一 以下4种情况必须用初始化列表进行初始化
 (1)常量
 (2)引用  
 (3)调用成员对象的带参构造函数。	
 (4)调用父类对象的带参构造函数。(创建子类对象一定会调用父类构造函数)


#include <iostream>
using namespace std;

class D{
	int m;
public:
	D(int i){}
};

class E{
public:
	E(int i){}
};

class C:public E{
	const int i;
	int& j;   //引用变量只能用变量初始化，不能用字面常量初始化j,C():i(4),j(5),E(6){}//error
	D d;
public:
	//C(int d =0):i(4),j(d),E(6),d(7){} //会有警告
	C(int d =0):E(6),i(4),j(d),d(7){}  //这四种情况必须在初始化列表中进行初始化
};

int main(){
	C c;
	return 0;
}


二 以下2种情况必须用构造函数初始化。
    (1)数组
    (2)结构体


三 其余的成员变量既可以用初始化成员列表初始化，又能用构造函数进行初始化。


